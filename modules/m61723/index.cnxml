<document xmlns="http://cnx.rice.edu/cnxml"> 
<title>Json0210: Structure of the json-simple Java Library</title>
<metadata xmlns:md="http://cnx.rice.edu/mdml">
  <md:content-id>m61723</md:content-id>
  <md:title>Json0210: Structure of the json-simple Java Library</md:title>
  <md:abstract>This page explains the inheritance structure of the json-simple Java library and how it fits into the standard Java library.</md:abstract>
  <md:uuid>feedd928-8743-4601-a2a7-2fcef18edaa1</md:uuid>
</metadata>

<content>






<para id="p1000">
Revised: Thu Jun 02 19:23:22 CDT 2016

</para>




<para id="p1001">
<emphasis id="em1000" effect="italics">
This page is included in the following Books:

</emphasis>
</para>




<list id="ul1000" list-type="bulleted">

        

<item id="li1000">

        

<link id="a1000" url="http://cnx.org/contents/5sRB9gpG">


<emphasis id="em1001" effect="italics">
The json-simple Java Library

</emphasis>
</link>

.

</item>


	

<item id="li1001">

	

<link id="a1001" url="http://cnx.org/contents/yWyT-uhM">


<emphasis id="em1002" effect="italics">
INEW2338 - Advanced Java Programming

</emphasis>
</link>


</item>


	

<item id="li1002">

	

<link id="a1002" url="http://cnx.org/contents/-2RmHFs_">


<emphasis id="em1003" effect="italics">
Object-Oriented Programming (OOP) with Java

</emphasis>
</link>


</item>




</list>














<section id="h11000">
<title>
<emphasis id="Table_of_contents" effect="bold">

Table of contents

</emphasis>


</title>







<list id="ul1001" list-type="bulleted">
<item id="li1003">
<link id="a1003" target-id="Table_of_contents">

Table of contents

</link>




</item>


<item id="li1004">
<link id="a1004" target-id="Preface">

Preface

</link>




<list id="ul1002" list-type="bulleted">
<item id="li1005">
<link id="a1005" target-id="Viewing_tip">

Viewing tip

</link>




<list id="ul1003" list-type="bulleted">
<item id="li1006">
<link id="a1006" target-id="Figures">

Figures

</link>




</item>


<item id="li1007">
<link id="a1007" target-id="Listings">

Listings

</link>




</item>


</list>


</item>


</list>


</item>


<item id="li1008">
<link id="a1008" target-id="General_background_information">

General 
	background information

</link>




</item>


<item id="li1009">
<link id="a1009" target-id="Discussion_and_sample_code">

Discussion and sample code

</link>




</item>


<item id="li1010">
<link id="a1010" target-id="What_you_can_expect">

What you can expect

</link>




</item>


<item id="li1011">
<link id="a1011" target-id="Run_the_program">

Run the program

</link>




</item>


<item id="li1012">
<link id="a1012" target-id="Complete_program_listings">

Complete program listing

</link>




</item>


<item id="li1013">
<link id="a1013" target-id="Miscellaneous">

Miscellaneous

</link>




</item>


</list>




	

</section>
<section id="h11001">
<title>
<emphasis id="Preface" effect="bold">

Preface

</emphasis>


</title>


	
	

<para id="p1002">
This is a page from the book titled 

<emphasis id="strong1000" effect="bold">
The json-simple Java Library

</emphasis>
. The book explains how to use the 
	

<emphasis id="strong1001" effect="bold">
json-simple

</emphasis>
 Java library to generate, transform, and query 
	JSON text. This page explains the inheritance structure of the 

<emphasis id="strong1002" effect="bold">

	json-simple

</emphasis>
 Java library and how it fits into the standard Java 
	library. 

</para>



	
	

<section id="h21000">
<title>
<emphasis id="Viewing_tip" effect="bold">

Viewing tip

</emphasis>


</title>


	

<para id="p1003">
I recommend that you open another copy of this module in a separate 
browser window and use the following links to easily find and view the Figures 
and Listings while you are reading about them.

</para>



	

<section id="h31000">
<title>
<emphasis id="Figures" effect="bold">

Figures

</emphasis>


</title>


	

<list id="ul1004" list-type="bulleted">

		

<item id="li1014">
<link id="a1014" target-id="Figure_1">

Figure 1

</link>

. Inheritance hierarchy. 

</item>



	

</list>


	

</section>
<section id="h31001">
<title>
<emphasis id="Listings" effect="bold">

Listings

</emphasis>


</title>


	

<list id="ul1005" list-type="bulleted">

		

<item id="li1015">
<link id="a1015" target-id="Listing_1">

Listing 1

</link>

. Program named Code.java. 

</item>



	

</list>




	

</section>
</section>
</section>
<section id="h11002">
<title>
<emphasis id="General_background_information" effect="bold">

General 
	background information

</emphasis>


</title>




<para id="p1004">
The earlier page titled 

<link id="a1016" url="http://cnx.org/contents/5sRB9gpG:9MswajcY">

Json0205: Getting Started

</link>

 provided a download link for a standard 

<emphasis id="strong1003" effect="bold">

javadoc

</emphasis>
 documentation package for version 1.1 of the 

<emphasis id="strong1004" effect="bold">

json-simple

</emphasis>
 Java library. That documentation package shows that the 
library contains the following packages:

</para>





<list id="ul1006" list-type="bulleted">

	

<item id="li1016">
org.json.simple

</item>


	

<item id="li1017">
org.json.simple.parser

</item>




</list>




<para id="p1005">
Those packages contain the following classes and interfaces with the 
interfaces 

<emphasis id="shown_in_Italics" effect="bold">

shown in Italics

</emphasis>

:

</para>





<list id="ul1007" list-type="bulleted">

	

<item id="li1018">
<emphasis id="em1004" effect="italics">
ContainerFactory
    

</emphasis>
</item>


	

<item id="li1019">
<emphasis id="em1005" effect="italics">
ContentHandler
    

</emphasis>
</item>


	

<item id="li1020">
ItemList 

</item>


	

<item id="li1021">
JSONArray 

</item>


	

<item id="li1022">
<emphasis id="em1006" effect="italics">
JSONAware 

</emphasis>
 

</item>


	

<item id="li1023">
JSONObject
    

</item>


	

<item id="li1024">
JSONParser 

</item>


	

<item id="li1025">
<emphasis id="em1007" effect="italics">
JSONStreamAware 

</emphasis>
</item>


	

<item id="li1026">
JSONValue
    

</item>


	

<item id="li1027">
ParseException 

</item>


	

<item id="li1028">
Yytoken 

</item>




</list>





<note id="note1000" type="">





<para id="p1006">

The jar file also contains a class named 

<emphasis id="strong1005" effect="bold">
Yylex

</emphasis>
 in the 

<emphasis id="strong1006" effect="bold">
org.json.simple.parser

</emphasis>
 package that did not show up in the documentation. It didn't show up in the documentation because it is 


<emphasis id="em1008" effect="italics">
package-private 

</emphasis>
and therefore not intended for our direct use. It is used internally by code in the class named 


<emphasis id="strong1007" effect="bold">
JSONParser

</emphasis>
.


</para>





</note>



	

	

</section>
<section id="h11003">
<title>
<emphasis id="Discussion_and_sample_code" effect="bold">

Discussion and sample code

</emphasis>


</title>


	
	

<para id="p1007">
<link id="a1017" target-id="Listing_1">

 Listing 1

</link>

 provides the code for a Java program that 
establishes the position in the class hierarchy of each of the 
	

<link id="a1018" target-id="shown_in_Italics">

classes

</link>

 in the 


<emphasis id="strong1008" effect="bold">
json-simple

</emphasis>
 library by displaying the superclass of each of those classes. 

<link id="a1019" target-id="Figure_1">

 Figure 1

</link>

 shows the 
screen output produced by this program.

</para>






<note id="note1001" type="">



 












<emphasis id="Figure_1" effect="bold">

Figure 1.

</emphasis>

 Inheritance hierarchy.


<code id="pre1000" display="block">
ItemList: class java.lang.Object
JSONArray: class java.util.ArrayList
JSONObject: class java.util.HashMap
JSONParser: class java.lang.Object
JSONValue: class java.lang.Object
ParseException: class java.lang.Exception
Yytoken: class java.lang.Object
</code>




</note>
















<para id="p1008">
The class named 

<emphasis id="strong1009" effect="bold">
ParseException

</emphasis>
 extends the standard class 
named 

<emphasis id="strong1010" effect="bold">
Exception

</emphasis>
 as you might expect.

</para>





<para id="p1009">
Four of the classes extend the class named 

<emphasis id="strong1011" effect="bold">
Object

</emphasis>
, which is 
not particularly surprising. New classes extend the 

<emphasis id="strong1012" effect="bold">
Object

</emphasis>
 class by default 
unless they are defined to purposely extend some other class.

</para>






<para id="p1010">
The most important thing shown in 

<link id="a1020" target-id="Figure_1">

 Figure 1

</link>

 is that the 

<emphasis id="strong1013" effect="bold">
JSONArray

</emphasis>
 
class 
extends the standard 

<emphasis id="strong1014" effect="bold">
ArrayList

</emphasis>
 class and the 

<emphasis id="strong1015" effect="bold">
JSONObject

</emphasis>
 
class extends
the standard


<emphasis id="strong1016" effect="bold">
HashMap

</emphasis>
 class. These standard classes are part of the 

<emphasis id="em1009" effect="italics">
Java 
Collections Framework

</emphasis>
.

</para>





<para id="p1011">
This illustrates one of the most important features of the


<emphasis id="strong1017" effect="bold">
json-simple

</emphasis>
 library. The library maximizes the use of standard 
classes from the 

<emphasis id="em1010" effect="italics">
Java Collections Framework

</emphasis>
. Once you have a reference to an 
object of the 

<emphasis id="strong1018" effect="bold">
JSONArray

</emphasis>
 class or an object of the 

<emphasis id="strong1019" effect="bold">

JSONObject

</emphasis>
 class, you have access to all of the polymorphic features 
provided by that framework. You also have access to the methods defined by those 
two classes and the classes defined by their superclasses. Therefore, if you are already skilled at programming within 
the collections framework, it is a small step to add JSON programming to your skill set.

</para>





</section>
<section id="h11004">
<title>
<emphasis id="What_you_can_expect" effect="bold">

What you can expect

</emphasis>


</title>




<para id="p1012">
This book will explain how to use the following classes:

</para>





<list id="ul1008" list-type="bulleted">




	

<item id="li1029">
JSONObject
    

</item>




	

<item id="li1030">
JSONValue
    

</item>


	

<item id="li1031">
JSONParser 
    

</item>


	

<item id="li1032">
JSONArray 
    

</item>


	

<item id="li1033">
ParseException 

</item>





</list>




<para id="p1013">
An investigation into the use of the other classes and interfaces will be 
left as 

<emphasis id="em1011" effect="italics">
"an exercise for the student"

</emphasis>
.

</para>






</section>
<section id="h11005">
<title>
<emphasis id="Run_the_program" effect="bold">

Run the program

</emphasis>


</title>





<para id="p1014">
I encourage you to copy the code from 

<link id="a1021" target-id="Listing_1">

 Listing 1

</link>

. Execute the code and confirm 
that you get the same results as those shown in 

<link id="a1022" target-id="Figure_1">

 Figure 1

</link>

. Experiment with the code, 
making changes, and observing the results of your changes. Make certain that you 
can explain why your changes behave as they do.

</para>





</section>
<section id="h11006">
<title>
<emphasis id="Complete_program_listings" effect="bold">

Complete program listing

</emphasis>


</title>




<para id="p1015">
<link id="a1023" target-id="Listing_1">

 Listing 1

</link>

 provides the source code for the program named 

<emphasis id="strong1020" effect="bold">
Code.java

</emphasis>
.

</para>







<note id="note1002" type="">



 











<emphasis id="Listing_1" effect="bold">

Listing 1

</emphasis>

. Program named Code.java.


<code id="pre1001" display="block">
/********************************************************************
Copyright 2016, R.G.Baldwin
Establishes the position of each of the json-simple classes in the
 class hierarchy by getting and displaying the superclass of each
 class.

Produces the following output:

ItemList: class java.lang.Object
JSONArray: class java.util.ArrayList
JSONObject: class java.util.HashMap
JSONParser: class java.lang.Object
JSONValue: class java.lang.Object
ParseException: class java.lang.Exception
Yytoken: class java.lang.Object

Tested with Java 8, Windows 7, and json-simple-1.1.1.jar
********************************************************************/
import org.json.simple.JSONObject;
import org.json.simple.JSONArray;
import org.json.simple.JSONValue;
import org.json.simple.ItemList;
import org.json.simple.JSONAware;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;
import org.json.simple.parser.Yytoken;


class Code{
  public static void main(String[] args){

    System.out.println("ItemList: " + 
                          new ItemList().getClass().getSuperclass());
    System.out.println("JSONArray: " + 
                         new JSONArray().getClass().getSuperclass());
    System.out.println("JSONObject: " + 
                        new JSONObject().getClass().getSuperclass());
    System.out.println("JSONParser: " + 
                        new JSONParser().getClass().getSuperclass());
    System.out.println("JSONValue: " + 
                         new JSONValue().getClass().getSuperclass());
    System.out.println("ParseException: " + 
            new ParseException(ParseException.ERROR_UNEXPECTED_CHAR).
                                         getClass().getSuperclass());
    System.out.println("Yytoken: " + 
                                 new Yytoken(Yytoken.TYPE_COLON,":").
                                         getClass().getSuperclass());
  }//end main
}//end class code
</code>




</note>















	

</section>
<section id="h11007">
<title>
<emphasis id="Miscellaneous" effect="bold">

Miscellaneous

</emphasis>


</title>


	

<para id="p1016">
This section contains a variety of miscellaneous information.

</para>





	

<note id="note1003" type="">


		


			


				

<emphasis id="strong1021" effect="bold">
Housekeeping material

</emphasis>

				

<list id="ul1009" list-type="bulleted">

					

<item id="li1034">
Module name: Json0210: Structure of the json-simple Java 
					Library

</item>


					

<item id="li1035">
File: Json0210.htm

</item>


					

<item id="li1036">
Published: 05/30/16

</item>



				

</list>



				

</note>





	

<note id="note1004" type="">


		


			


				

<emphasis id="strong1022" effect="bold">
Disclaimers:

</emphasis>
<para id="p1017">
<emphasis id="strong1023" effect="bold">
Financial

</emphasis>
: Although the Connexions
site makes it possible for you to download a PDF file for this
module at no charge, and also makes it possible for you to
purchase a pre-printed version of the PDF file, you should be
aware that some of the HTML elements in this module may not translate well into
PDF.

</para>



				

<para id="p1018">
I also want you to know that, I receive no financial compensation from the Connexions website even if you purchase 
	the PDF version of the module.

</para>



				

<para id="p1019">
In the past, unknown individuals have copied my modules from cnx.org, converted them to Kindle books, and 
				placed them for sale on Amazon.com showing me as the author. I 
				neither receive compensation for those sales nor do I know who does 
				receive compensation. If you purchase such a book, please be 
				aware that it is a copy of a module that is freely 
				available on cnx.org and that it was made and published without 
				my prior knowledge.

</para>



				

<para id="p1020">
<emphasis id="strong1024" effect="bold">
Affiliation

</emphasis>
: I am a professor of Computer Information 
	Technology at Austin Community College in Austin, TX.
	

</para>




</note>



	


<para id="p1021">
-end- 

</para>







</section>
</content>




</document>